{
  "New Vue Full Component": {
    "isFileTemplate": true,
    "description": "Create a new Vue component with everything needed for a complete UI component",
    "prefix": "new:vue:full-component",
    "body": [
      "<script lang=\"ts\">",
      "const ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/} = tv({",
      "  slots: {",
      "    base: ''",
      "  },",
      "})",
      "",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props {",
      "  class?: any",
      "  ui?: Partial<typeof ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}.slots>",
      "}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits {}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots {}",
      "</script>",
      "",
      "<script lang=\"ts\" setup>",
      "const props = defineProps<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props>()",
      "defineEmits<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits>()",
      "defineSlots<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots>()",
      "",
      "const ui = computed(() => ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}())",
      "</script>",
      "",
      "<template>",
      "  $0",
      "</template>"
    ]
  },
  "New Slideover Component": {
    "isFileTemplate": true,
    "description": "Create a new Slideover component with everything needed for a complete UI component",
    "prefix": "new:vue:slideover-component",
    "body": [
      "<script lang=\"ts\">",
      "const ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/} = tv({",
      "  slots: {",
      "    base: ''",
      "  },",
      "})",
      "",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props {",
      "  class?: any;",
      "  ui?: Partial<typeof ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}.slots>;",
      "}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits {",
      "  close: [void];",
      "}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots {}",
      "</script>",
      "",
      "<script lang=\"ts\" setup>",
      "const props = defineProps<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props>()",
      "defineEmits<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits>()",
      "defineSlots<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots>()",
      "",
      "const title = '';",
      "const description = '';",
      "",
      "const ui = computed(() => ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}())",
      "</script>",
      "",
      "<template>",
      "  <Slideover",
      "    :title=\"title\"",
      "    :description=\"description\"",
      "    :class=\"ui.base({ class: [props.class, props.ui?.base] })\"",
      "  >",
      "    <template #body>",
      "      $0",
      "    </template>",
      "  </Slideover>",
      "</template>"
    ]
  },
  "New Modal Component": {
    "isFileTemplate": true,
    "description": "Create a new Modal component with everything needed for a complete UI component",
    "prefix": "new:vue:modal-component",
    "body": [
      "<script lang=\"ts\">",
      "const ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/} = tv({",
      "  slots: {",
      "    base: ''",
      "  },",
      "})",
      "",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props {",
      "  class?: any;",
      "  ui?: Partial<typeof ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}.slots>;",
      "}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits {",
      "  close: [void];",
      "}",
      "export interface ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots {}",
      "</script>",
      "",
      "<script lang=\"ts\" setup>",
      "const props = defineProps<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Props>()",
      "const emit = defineEmits<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Emits>()",
      "defineSlots<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}Slots>()",
      "",
      "const title = '';",
      "const description = ''",
      "",
      "const ui = computed(() => ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}())",
      "</script>",
      "",
      "<template>",
      "  <Modal",
      "    :title=\"title\"",
      "    :description=\"description\"",
      "    :class=\"ui.base({ class: [props.class, props.ui?.base] })\"",
      "  >",
      "    <template #body>",
      "      $0",
      "    </template>",
      "  </Modal>",
      "</template>"
    ]
  }
}
